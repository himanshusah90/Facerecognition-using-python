# -*- coding: utf-8 -*-
"""Untitled20.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qFIfyyYXCFqTyX7BBfYTukylRxNhMMqa
"""

!pip install face_recognition

!mkdir known
!wget https://www.biography.com/.image/t_share/MTY2MzU3Nzk2OTM2MjMwNTkx/elon_musk_royal_society.jpg -O known/elon.jpg
!wget https://pbs.twimg.com/profile_images/988775660163252226/XpgonN0X_400x400.jpg -O known/bill.jpg
!wget https://www.biography.com/.image/t_share/MTE4MDAzNDEwNzg5ODI4MTEw/barack-obama-12782369-1-402.jpg -O known/obama.jpg

!mkdir unknown
!wget https://i.insider.com/5ddfa893fd9db26b8a4a2df7 -O unknown/1.jpg
!wget https://cdn-images-1.medium.com/max/1200/1*aEoYLgy4z1lT1kW7dqWzBg.jpeg -O unknown/2.jpg
!wget https://media2.s-nbcnews.com/j/newscms/2017_46/2224911/171113-bill-gates-se-247p_043bd413c63b2a97abf11bfad747538d.fit-760w.jpg -O unknown/3.jpg
!wget https://specials-images.forbesimg.com/imageserve/1184274010/960x0.jpg -O unknown/4.jpg

!pip install dlib

import face_recognition
import cv2
import os
from google.colab.patches import cv2_imshow

def read_img(path):
    img = cv2.imread(path)
    if img is None:
        print("Error: Unable to read image from", path)
        return None
    img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)  # Convert BGR to RGB
    (h, w) = img_rgb.shape[:2]
    width = 500
    ratio = width / float(w)
    height = int(h * ratio)
    return cv2.resize(img_rgb, (width, height))

known_encodings = []
known_names = []
known_dir = 'known'

for file in os.listdir(known_dir):
    img = read_img(os.path.join(known_dir, file))
    if img is not None:
        face_locations = face_recognition.face_locations(img)
        if face_locations:
            img_enc = face_recognition.face_encodings(img, face_locations)[0]
            known_encodings.append(img_enc)
            known_names.append(file.split('.')[0])
        else:
            print("No face detected in", file)

unknown_dir = 'unknown'
for file in os.listdir(unknown_dir):
    print("Processing", file)
    img = read_img(os.path.join(unknown_dir, file))
    if img is not None:
        face_locations = face_recognition.face_locations(img)
        if face_locations:
            img_enc = face_recognition.face_encodings(img, face_locations)[0]
            results = face_recognition.compare_faces(known_encodings, img_enc)
            for i, result in enumerate(results):
                if result:
                    name = known_names[i]
                    (top, right, bottom, left) = face_locations[0]
                    cv2.rectangle(img, (left, top), (right, bottom), (0, 0, 255), 2)
                    cv2.putText(img, name, (left+2, bottom+20), cv2.FONT_HERSHEY_PLAIN, 1, (255, 255, 255), 1)
                    cv2_imshow(img)
        else:
            print("No face detected in", file)